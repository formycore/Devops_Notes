node3@docker:~$ ssh-keygen -t rsa                # Generate a new RSA SSH key pair
Generating public/private rsa key pair.           # System message: key pair is being created
Enter file in which to save the key (/home/node3/.ssh/id_rsa):   # Prompt: where to save the private key (default shown)
Created directory '/home/node3/.ssh'.             # System message: .ssh directory created if it didn't exist
Enter passphrase (empty for no passphrase):        # Prompt: set a passphrase for extra security (optional)
Enter same passphrase again:                       # Prompt: confirm the passphrase
Your identification has been saved in /home/node3/.ssh/id_rsa    # System message: private key saved
Your public key has been saved in /home/node3/.ssh/id_rsa.pub    # System message: public key saved
The key fingerprint is:                            # System message: shows fingerprint for verification
SHA256:d9b4udb1mY3vpjxb/8l6QP1eci8FD6ToGSgIfmHlrp0 node3@docker
The key's randomart image is:                      # System message: visual representation of the key
+---[RSA 3072]----+
|     ..          |
|  . o.        .  |
| . o o.  . . o.  |
|  . o.. . o .+o. |
|   .  ..S..o= .+.| 
|     o . .oo o..B|
|    . E       +BX|
|             .**X|
|             oB@*|
+----[SHA256]-----+
node3@docker:~$ cd ~/.ssh/                        # Change directory to .ssh where keys are stored
node3@docker:~/.ssh$ ls                           # List files to verify keys are present
id_rsa  id_rsa.pub                                # Output: private and public key files
node3@docker:~/.ssh$ cp id_rsa.pub authorized_keys    # Copy public key to authorized_keys (allows SSH login)
node3@docker:~/.ssh$ chmod 600 authorized_keys        # Set permissions so only the user can read/write authorized_keys
node3@docker:~/.ssh$ cat authorized_keys              # Display the contents of authorized_keys (contains the public key)
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCbXYZp...      # The actual public key (truncated for brevity)

- copy this authorized_keys content to the server2      # Copy the authorized_keys file to the other server (server2)
- follow the same on the server2                        # Repeat the above steps on server2 for its own key
- ssh user@server1 (it will connect)                    # Now you can SSH from server2 to server1