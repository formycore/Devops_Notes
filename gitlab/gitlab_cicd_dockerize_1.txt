stages:
  - build
  - sonar_cloud_analysis
  - build-img
variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task

node_build:
  image: node:current-alpine3.19
  stage: build
  script:
    - npm install
    - echo "Building Node.js application..."
  artifacts:
    paths:
      - "node_modules/"
sonarcloud-check:
  stage: sonar_cloud_analysis
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  only:
    - merge_requests
    - main
build-push-img:
  image: docker:stable
  stage: build-img
  needs:
    - node_build
  services:
    - name: docker:dind
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
    - docker build -t $CI_REGISTRY/node-app:$CI_PIPELINE_ID .
    - docker push $CI_REGISTRY/node-app:$CI_PIPELINE_ID

